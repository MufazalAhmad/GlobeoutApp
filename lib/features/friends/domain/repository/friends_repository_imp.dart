////********** AUTOGENERATED FILE: DO NOT REMOVE ANY COMMENT IN THIS STYLE **********////
////********** START IMPORTS **********////
import 'friends_repository.dart';
import 'package:injectable/injectable.dart';
import '../../data/source/phone/friends_phone_datasource.dart';
import '../usecases/get_contacts.dart';
import '../usecases/phone_contacts_updated.dart';
import '../../data/source/local/friends_local_datasource.dart';
import '../usecases/save_contacts.dart';
import '../usecases/remove_contacts.dart';
import '../usecases/load_contacts.dart';
import '../../data/source/firebase/friends_firebase_datasource.dart';
import '../usecases/load_users_from_contacts.dart';
import '../usecases/add_friend.dart';
import '../usecases/get_founders_usecase.dart';
import '../usecases/follow_user.dart';
import '../usecases/unfollow_user.dart';
import '../usecases/set_initial_invites_sent_usecase.dart';
import '../usecases/get_recieved_friend_requests.dart';
import '../usecases/accept_friend_request.dart';
import '../usecases/get_all_friends.dart';
import '../usecases/un_friend.dart';
import '../usecases/get_close_friends.dart';
import '../usecases/add_friend_to_close_friend.dart';
import '../usecases/remove_friend_from_close_friends.dart';
import '../usecases/cancel_friend_request.dart';
import '../usecases/get_contacts_with_detail.dart';
////********** END IMPORTS **********////

@LazySingleton(as: FriendsRepository)
class FriendsRepositoryImp implements FriendsRepository {
////********** START VARIABLES **********////
  final FriendsPhoneDataSource _friendsPhoneDataSource;
  final FriendsLocalDataSource _friendsLocalDataSource;

  final FriendsFirebaseDataSource
      _friendsFirebaseDataSource; ////********** END VARIABLES **********////

  FriendsRepositoryImp({
////********** START RECEIVE VALUES **********////
    required FriendsPhoneDataSource friendsPhoneDataSource,
    required FriendsLocalDataSource friendsLocalDataSource,
    required FriendsFirebaseDataSource friendsFirebaseDataSource,
////********** END RECEIVE VALUES **********////
  })  :
////********** START SET VALUES **********////
        _friendsPhoneDataSource = friendsPhoneDataSource,
        _friendsLocalDataSource = friendsLocalDataSource,
        _friendsFirebaseDataSource = friendsFirebaseDataSource
////********** END SET VALUES **********////
  ;

////********** START METHODS **********////
  /// [GetContactsUsecaseInput] is received to [getContacts] method as parameter
  /// [GetContactsUsecaseOutput] is returned from [getContacts] method
  @override
  Future<GetContactsUsecaseOutput> getContacts(
      GetContactsUsecaseInput input) async {
    return _friendsPhoneDataSource.getContacts(input);
  }

  /// [PhoneContactsUpdatedUsecaseInput] is received to [phoneContactsUpdated] method as parameter
  /// [PhoneContactsUpdatedUsecaseOutput] is returned from [phoneContactsUpdated] method
  @override
  Future<PhoneContactsUpdatedUsecaseOutput> phoneContactsUpdated(
      PhoneContactsUpdatedUsecaseInput input) async {
    return _friendsPhoneDataSource.phoneContactsUpdated(input);
  }

  /// [SaveContactsUsecaseInput] is received to [saveContacts] method as parameter
  /// [SaveContactsUsecaseOutput] is returned from [saveContacts] method
  @override
  Future<SaveContactsUsecaseOutput> saveContacts(
      SaveContactsUsecaseInput input) async {
    return _friendsLocalDataSource.saveContacts(input);
  }

  /// [RemoveContactsUsecaseInput] is received to [removeContacts] method as parameter
  /// [RemoveContactsUsecaseOutput] is returned from [removeContacts] method
  @override
  Future<RemoveContactsUsecaseOutput> removeContacts(
      RemoveContactsUsecaseInput input) async {
    return _friendsLocalDataSource.removeContacts(input);
  }

  /// [LoadContactsUsecaseInput] is received to [loadContacts] method as parameter
  /// [LoadContactsUsecaseOutput] is returned from [loadContacts] method
  @override
  Future<LoadContactsUsecaseOutput> loadContacts(
      LoadContactsUsecaseInput input) async {
    return _friendsLocalDataSource.loadContacts(input);
  }

  /// [LoadUsersFromContactsUsecaseInput] is received to [loadUsersFromContacts] method as parameter
  /// [LoadUsersFromContactsUsecaseOutput] is returned from [loadUsersFromContacts] method
  @override
  Future<LoadUsersFromContactsUsecaseOutput> loadUsersFromContacts(
      LoadUsersFromContactsUsecaseInput input) async {
    return _friendsFirebaseDataSource.loadUsersFromContacts(input);
  }

  /// [AddFriendUsecaseInput] is received to [addFriend] method as parameter
  /// [AddFriendUsecaseOutput] is returned from [addFriend] method
  @override
  Future<AddFriendUsecaseOutput> addFriend(AddFriendUsecaseInput input) async {
    return _friendsFirebaseDataSource.addFriend(input);
  }

  /// [GetFoundersUsecaseUsecaseInput] is received to [getFounders] method as parameter
  /// [GetFoundersUsecaseUsecaseOutput] is returned from [getFounders] method
  @override
  Future<GetFoundersUsecaseUsecaseOutput> getFounders(
      GetFoundersUsecaseUsecaseInput input) async {
    return _friendsFirebaseDataSource.getFounders(input);
  }

  /// [FollowUserUsecaseInput] is received to [followUser] method as parameter
  /// [FollowUserUsecaseOutput] is returned from [followUser] method
  @override
  Future<FollowUserUsecaseOutput> followUser(
      FollowUserUsecaseInput input) async {
    return _friendsFirebaseDataSource.followUser(input);
  }

  /// [UnfollowUserUsecaseInput] is received to [unfollowUser] method as parameter
  /// [UnfollowUserUsecaseOutput] is returned from [unfollowUser] method
  @override
  Future<UnfollowUserUsecaseOutput> unfollowUser(
      UnfollowUserUsecaseInput input) async {
    return _friendsFirebaseDataSource.unfollowUser(input);
  }

  /// [SetInitialInvitesSentUsecaseUsecaseInput] is received to [setInitialInvitesSent] method as parameter
  /// [SetInitialInvitesSentUsecaseUsecaseOutput] is returned from [setInitialInvitesSent] method
  @override
  Future<SetInitialInvitesSentUsecaseUsecaseOutput> setInitialInvitesSent(
      SetInitialInvitesSentUsecaseUsecaseInput input) async {
    return _friendsFirebaseDataSource.setInitialInvitesSent(input);
  }

  /// [GetReceivedFriendRequestsUsecaseInput] is received to [getReceivedFriendRequests] method as parameter
  /// [GetReceivedFriendRequestsUsecaseOutput] is returned from [getReceivedFriendRequests] method
  @override
  GetReceivedFriendRequestsUsecaseOutput getReceivedFriendRequests(
      GetReceivedFriendRequestsUsecaseInput input) {
    return _friendsFirebaseDataSource.getReceivedFriendRequests(input);
  }

  /// [AcceptFriendRequestUsecaseInput] is received to [acceptFriendRequest] method as parameter
  /// [AcceptFriendRequestUsecaseOutput] is returned from [acceptFriendRequest] method
  @override
  Future<AcceptFriendRequestUsecaseOutput> acceptFriendRequest(
      AcceptFriendRequestUsecaseInput input) async {
    return _friendsFirebaseDataSource.acceptFriendRequest(input);
  }

  /// [GetAllFriendsUsecaseInput] is received to [getAllFriends] method as parameter
  /// [GetAllFriendsUsecaseOutput] is returned from [getAllFriends] method
  @override
  GetAllFriendsUsecaseOutput getAllFriends(GetAllFriendsUsecaseInput input) {
    return _friendsFirebaseDataSource.getAllFriends(input);
  }

  /// [UnFriendUsecaseInput] is received to [unFriend] method as parameter
  /// [UnFriendUsecaseOutput] is returned from [unFriend] method
  @override
  Future<UnFriendUsecaseOutput> unFriend(UnFriendUsecaseInput input) async {
    return _friendsFirebaseDataSource.unFriend(input);
  }

  /// [GetCloseFriendsUsecaseInput] is received to [getCloseFriends] method as parameter
  /// [GetCloseFriendsUsecaseOutput] is returned from [getCloseFriends] method
  @override
  GetCloseFriendsUsecaseOutput getCloseFriends(
      GetCloseFriendsUsecaseInput input) {
    return _friendsFirebaseDataSource.getCloseFriends(input);
  }

  /// [AddFriendToCloseFriendUsecaseInput] is received to [addFriendToCloseFriend] method as parameter
  /// [AddFriendToCloseFriendUsecaseOutput] is returned from [addFriendToCloseFriend] method
  @override
  Future<AddFriendToCloseFriendUsecaseOutput> addFriendToCloseFriend(
      AddFriendToCloseFriendUsecaseInput input) async {
    return _friendsFirebaseDataSource.addFriendToCloseFriend(input);
  }


  /// [RemoveFriendFromCloseFriendsUsecaseInput] is received to [removeFriendFromCloseFriends] method as parameter
  /// [RemoveFriendFromCloseFriendsUsecaseOutput] is returned from [removeFriendFromCloseFriends] method
  @override
  Future<RemoveFriendFromCloseFriendsUsecaseOutput> removeFriendFromCloseFriends(RemoveFriendFromCloseFriendsUsecaseInput input) async {
    return _friendsFirebaseDataSource.removeFriendFromCloseFriends(input);
  }


  /// [CancelFriendRequestUsecaseInput] is received to [cancelFriendRequest] method as parameter
  /// [CancelFriendRequestUsecaseOutput] is returned from [cancelFriendRequest] method
  @override
  Future<CancelFriendRequestUsecaseOutput> cancelFriendRequest(CancelFriendRequestUsecaseInput input) async {
    return _friendsFirebaseDataSource.cancelFriendRequest(input);
  }


  /// [GetContactsWithDetailUsecaseInput] is received to [getContactsWithDetail] method as parameter
  /// [GetContactsWithDetailUsecaseOutput] is returned from [getContactsWithDetail] method
  @override
  Future<GetContactsWithDetailUsecaseOutput> getContactsWithDetail(GetContactsWithDetailUsecaseInput input) async {
    return _friendsPhoneDataSource.getContactsWithDetail(input);
  }

////********** END METHODS **********////
}
